rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
    	allow read: if isSignedIn();
      allow create, update: if request.auth.uid == userId;
      match /photos/{document=**} {
      	allow read: if isSignedIn();
        allow write: if request.auth.uid == userId;
      }
    }
    match /relationships/{userId}/{document=**} {
    	allow read: if isSignedIn();
      allow write: if request.auth.uid == userId;
    }
    match /events/{document=**} {
    	allow list, read;
      allow update: if isHost();
      allow update: if isSignedIn() && updateAttendeeFieldsOnly();
    }
  }
}

function isSignedIn() {
  return request.auth.uid != null;
}

function isHost() {
  return isSignedIn() && resource.data.hostUid == request.auth.uid;
}

function currentData() {
  return resource.data;
}

function newData() {
  return request.resource.data;
}

function updateAttendeeFieldsOnly() {
  return newData().diff(currentData()).changedKeys().hasOnly(['attendeeIds','attendees']);
}